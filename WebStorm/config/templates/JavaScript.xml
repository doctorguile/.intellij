<templateSet group="JavaScript">
  <template name="each" value="$collection$.each(function($item$) {&#10;  $END$&#10;});" description=".each(function(" toReformat="false" toShortenFQNames="false">
    <variable name="collection" expression="" defaultValue="&quot;collection&quot;" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ev.add" value="addEvent('$evt$', function($arg$) {&#10;  $END$&#10;});" description="addEvent(" toReformat="false" toShortenFQNames="false">
    <variable name="evt" expression="" defaultValue="&quot;evt&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="al" value="alert($END$);" description="alert(" toReformat="false" toShortenFQNames="false">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="class" value="var $instance$ = new Class({&#10;  initialize: function($arg$) {&#10;    $END$&#10;  }&#10;});" description="var es6 = new Class({" toReformat="false" toShortenFQNames="false">
    <variable name="instance" expression="" defaultValue="&quot;instance&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="f" value="function ($arg$) {&#10;    $END$&#10;}" description="anon function" toReformat="false" toShortenFQNames="false">
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for" value="for(var $i$ = $init$; $i$ &lt; $arr$.length; $i$++) {&#10;  $END$&#10;}" description="for(var =; &lt; .length; $++) {" toReformat="false" toShortenFQNames="false">
    <variable name="i" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="init" expression="" defaultValue="&quot;0&quot;" alwaysStopAt="true" />
    <variable name="arr" expression="" defaultValue="&quot;arr&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="init" value="initialize: function($arg$) {&#10;  $END$&#10;}" description="initialize: function(" toReformat="false" toShortenFQNames="false">
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ev.fire" value="fireEvent('$END$')" description="fireEvent(" toReformat="false" toShortenFQNames="false">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="el" value="else {&#10;  $END$&#10;}" description="else {" toReformat="false" toShortenFQNames="false">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="dbg" value="debugger;" description="debugger;" toReformat="false" toShortenFQNames="false">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="req.json" value="new Request.JSON({&#10;  onSuccess: function(responseJSON, responseText) {&#10;    $END$&#10;  }&#10;}).$expr_01$($expr_02$);" description="new Request.JSON(" toReformat="false" toShortenFQNames="false" deactivated="true">
    <variable name="expr_02" expression="" defaultValue="url" alwaysStopAt="true" />
    <variable name="expr_01" expression="" defaultValue="send" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="if" value="if ($cond$) {&#10;  $END$&#10;}" description="if (" toReformat="false" toShortenFQNames="false">
    <variable name="cond" expression="" defaultValue="&quot;cond&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="log" value="console.log($END$);" description="console.log" toReformat="false" toShortenFQNames="false">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="req.html" value="new Request.HTML({&#10;  onSuccess: function(responseTree, responseElements, responseHTML, responseJavaScript) {&#10;    $END$&#10;  }&#10;}).$expr_01$($expr_02$);" description="new Request.HTML(" toReformat="false" toShortenFQNames="false" deactivated="true">
    <variable name="expr_02" expression="" defaultValue="url" alwaysStopAt="true" />
    <variable name="expr_01" expression="" defaultValue="get" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ife" value="if ($cond$) {&#10;  $END$&#10;} else {&#10;}" description="if else" toReformat="false" toShortenFQNames="false">
    <variable name="cond" expression="" defaultValue="&quot;cond&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="elif" value="else if ($cond$) {&#10;  $END$&#10;}" description="else if (" toReformat="false" toShortenFQNames="false">
    <variable name="cond" expression="" defaultValue="&quot;cond&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="(f" value="(function($arg$}) {&#10;    $END$ &#10;}($arg$));" description="Immediately-Invoked Function Expression (iife)" toReformat="false" toShortenFQNames="false">
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="timeout" value="setTimeout(function() {&#10; $END$&#10;}.bind(this), 1000);&#10;" description="setTimeout function" toReformat="false" toShortenFQNames="false">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="switch" value="switch ($expr$) {&#10;    case '$pattern$':&#10;        $END$&#10;        break;  &#10;    default:&#10;        break;&#10;}" description="switch case default" toReformat="true" toShortenFQNames="true">
    <variable name="expr" expression="" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <variable name="pattern" expression="" defaultValue="&quot;pattern&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="case" value="case '$expr$':&#10;    $END$&#10;    break;  &#10;" description="case break" toReformat="true" toShortenFQNames="true">
    <variable name="expr" expression="" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="try" value="try {&#10;    $stmt$&#10;} catch (e) {&#10;    $END$&#10;}&#10;" description="try catch" toReformat="true" toShortenFQNames="true">
    <variable name="stmt" expression="" defaultValue="&quot;stmt&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="terr" value="throw new Error('$END$');&#10;    &#10;&#10;" description="throw new Error" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ret" value="return $END$;&#10;    &#10;&#10;" description="return" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forr" value="for (var $i$ = $container$.length - 1; $i$ &gt;= 0; $i$--) {&#10;  $END$&#10;}" description="reverse for" toReformat="false" toShortenFQNames="false">
    <variable name="i" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="container" expression="" defaultValue="&quot;container&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="wh" value="while ($cond$) {&#10;    $END$&#10;}&#10;" description="while" toReformat="true" toShortenFQNames="true">
    <variable name="cond" expression="" defaultValue="&quot;cond&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="do" value="do {&#10;    $stmt$&#10;} while ($END$);&#10;" description="do while" toReformat="true" toShortenFQNames="true">
    <variable name="stmt" expression="" defaultValue="&quot;stmt&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fori" value="for (var $n$ in $container$) {&#10;    if ($container$.hasOwnProperty($n$)) {    &#10;        $END$&#10;    }&#10;}" description="for ... in" toReformat="true" toShortenFQNames="true">
    <variable name="n" expression="" defaultValue="&quot;n&quot;" alwaysStopAt="true" />
    <variable name="container" expression="" defaultValue="&quot;container&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cl" value="console.log($END$);" description="console.log(" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ctime" value="console.time(&quot;$name$&quot;);&#10;$SELECTION$&#10;console.timeEnd(&quot;$name$&quot;);" description="console.time..." toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cprof" value="console.profile(&quot;$name$&quot;);&#10;$SELECTION$&#10;console.profileEnd(&quot;$name$&quot;);" description="console.profile..." toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="#!" value="#!/usr/bin/env node&#10;$END$" description="#!/usr/bin/env node" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ex" value="module.exports = $END$;" description="nodejs module.exports" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="re" value=" const $arg$ = require('$END$');" description="nodejs require module" toReformat="true" toShortenFQNames="true">
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="im" value="import { $sym$ } from '$path$';&#10;$END$" description="es6 import from" toReformat="true" toShortenFQNames="true">
    <variable name="sym" expression="" defaultValue="&quot;sym&quot;" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="&quot;path&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cla" value="class $cls$ {&#10;    constructor($arg$) {&#10;        $END$        &#10;    }&#10;}" description="es6 Class()" toReformat="false" toShortenFQNames="false">
    <variable name="cls" expression="" defaultValue="&quot;cls&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="=&gt;" value="($arg$) =&gt; {&#10;    $END$&#10;}&#10;" description="arrow function () =&gt; {}" toReformat="true" toShortenFQNames="true">
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ed" value="export default $END$;" description="es6 export default" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="vaf" value="var $name$ = function ($arg$) {&#10;     $END$&#10;}" description="var ... = function" toReformat="false" toShortenFQNames="false">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fun" value="function $fname$($arg$) {&#10;         $END$&#10;}" description="named function" toReformat="false" toShortenFQNames="false">
    <variable name="fname" expression="" defaultValue="&quot;fname&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name=":f" value="$name$: function ($arg$) {&#10;    $END$&#10;}," description="Object method" toReformat="false" toShortenFQNames="false">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>